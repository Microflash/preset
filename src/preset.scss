/*! Preset v1.0.1 | MIT License | https://github.com/Microflash/preset */

// 1. Remove default margin in all browsers
// 2. Set `line-height` based on x-height of the font and `font-size` to automatically adjust for all `font-size` values
// 3. Prevent text overflow for inline elements
// 4. Change from initial value `box-sizing: content-box` so that `inline-size` is not affected by `padding` or `border`
* {
	margin: 0; // 1
	line-height: var(--preset-line-height, calc(0.3rem + 2ex + 0.3rem)); // 2
	overflow-wrap: break-word; // 3

	&,
	&::before,
	&::after {
		box-sizing: border-box; // 4
	}
}

// 1. Allow percentage based `block-size` for the children of document
// 2. Prevent adjustments of `font-size` after orientation changes
// 3. Enable smooth scrolling when reduced-motion is unspecified
:where(html) {
	block-size: 100%; // 1
	text-size-adjust: 100%; // 2

	@media (prefers-reduced-motion: no-preference) {
		&:focus-within {
			scroll-behavior: smooth; // 3
		}
	}
}

// 1. Span the entire `block-size` to allow percentage based `block-size` for the children
// 2. Standardize tab-based indentation size in code blocks
body {
	min-block-size: 100%; // 1
	tab-size: var(--preset-tab-size, 2); // 2
}

// Hide elements with `hidden` attribute
:where([hidden]) {
	display: none;
}

// Position the `background-image` to cover the box with no repetition
:where(:not(fieldset, progress, meter)) {
	background-origin: border-box;
	background-repeat: no-repeat;
}

// 1. Add correct text-decoration for all browsers
// 2. Remove `border-block-end` in favor of `text-decoration`
// 3. Add explicit cursor to indicate changed behavior
:where(abbr[title]) {
	text-decoration-line: underline; // 1
	text-decoration-style: dotted; // 1
	border-block-end: none; // 2
	cursor: help; // 3
}

// Balance the characters on each line for layout quality and legibility
:where(h1, h2, h3, h4, h5, h6) {
	text-wrap: balance;
}

// Treat media elements as block elements to prevent layout issues, such as addition of `line-height` by user-agents
:where(img, svg, canvas, audio, video, iframe, embed, object) {
	display: block;
}

// 1. Stop media from overflowing the container
// 2. Automatically adjust the `block-size` based on `inline-size`
:where(img, svg, video) {
	max-inline-size: 100%; // 1
	block-size: auto; // 2
}

// 1. Inherit `color` for stroke
// 2. Keep the strokes rounded for SVGs without fill
:where(svg:not([fill]), svg[fill="none"]) {
	stroke: var(--preset-stroke-color, currentColor); // 1
	stroke-linecap: round; // 2
	stroke-linejoin: round; // 2
}

// Remove border from iframe
:where(iframe) {
	border: none;
}

// Summary as list-item in all browsers
:where(summary) {
	display: list-item;
}

// Add blur to dialog backdrop
:where(dialog)::backdrop {
	backdrop-filter: var(--preset-dialog-backdrop-filter, blur(25px));
}

// Hide the document overflow when dialog is open
:where(html:has(dialog[open])) {
	overflow: hidden;
}

// 1. Prevent double borders
// 2. Remove spacing between cells
// 3. Put captions at the bottom
:where(table) {
	border-collapse: collapse; // 1
	border-spacing: 0; // 2
	caption-side: var(--preset-table-caption-side, bottom); // 3
}

// Inherit the typography styles from the parent and not the operating system
:where(input, button, textarea, select, optgroup),
:where(input[type="file"])::file-selector-button {
	color: inherit;
	font: inherit;
	font-size: inherit;
	letter-spacing: inherit;
	word-spacing: inherit;
}

// 1. Prevent textarea to overflow the containers when resized horizontally
// 2. Allow textarea to resize in block direction based on writing mode and direction values
:where(textarea) {
	resize: vertical; // 1

	@supports (resize: block) {
		resize: block; // 2
	}
}

// Add explicit cursor to indicate clickable elements
:where(a[href], area, button, input:not([type="text"], [type="email"], [type="file"], [type="number"], [type="password"], [type=""], [type="tel"], [type="url"]), label[for], select, summary, [role="button"], [onclick], [tabindex]:not([tabindex*="-"])),
:where(input[type="file"])::file-selector-button {
	cursor: pointer;
}

// 1. Remove delay to generate click events on touch
// 2. Remove tap highlight on Apple devices
:where(a[href], area, button, input, label[for], select, summary, textarea, [role="button"], [onclick], [tabindex]:not([tabindex*="-"])) {
	touch-action: manipulation; // 1
	-webkit-tap-highlight-color: transparent; // 2
}

// Ensure button text is not selectable
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"]),
:where(input[type="file"])::file-selector-button {
	-webkit-touch-callout: none;
	user-select: none;
}

// Add explicit cursor to indicate disabled elements
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"])[disabled] {
	cursor: not-allowed;
}

// Animate focus outline
@media (prefers-reduced-motion: no-preference) {
	:where(:focus-visible) {
		transition: outline-offset 145ms cubic-bezier(0.25, 0, 0.4, 1);
	}

	:where(:not(:active):focus-visible) {
		transition-duration: 0.25s;
	}
}
